<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        REAREQFFVEQBERAEREB//9k=
</value>
  </data>
</root>